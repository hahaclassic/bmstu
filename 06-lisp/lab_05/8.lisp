(print (reduce #'(lambda (x elem) (* x 0)) '() :initial-value 10)) ; -> 0
(print (reduce #'* '(1))) ; -> 1
(print (+ 1))
(print  (* 1))

; Почему так реализовано reduce, в чем причина?

; Функционалы +, ∗ могут быть вызваны с 0 аргументов, при этом они будут возвращать 
;     нейтральные относительно операции значения: + — 0, ∗ — 1.
; initial−value не обязателен к указанию, но:
;       1. если нет initial−value и в аргументе > 1 элемента, то функция вызывается с
;            первыми двумя элементами аргумента;
;       2. если нет : initial − value и в аргументе 1 элемент, то возвращается значение этого
;            элемента и функция не вызывается;
;       3. если есть : initial-value и аргумент пуст, то возвращается : initial-value и функция
;             не вызывается;
;       4. если нет : initial-value и аргумент пуст, то функция вызывается с 0 аргументов
; 
;   :initial-value в reduce — это начальное значение аккумулятора, 
;        с которого начинается свёртка списка.
; 